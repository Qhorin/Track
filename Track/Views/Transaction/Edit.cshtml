@*@model Track.Models.Transaction*@
@model Track.ViewModels.TransactionEditViewModel

@{
    var transaction = Model.Transaction;
    var items = Model.TransactionItem;

    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Transaction</legend>

        @Html.HiddenFor(model => transaction.TransactionId)

        <h3>
            <p>
            @transaction.Timestamp
            </p>
        </h3>
        
        <div>
            @Html.LabelFor(model => transaction.Timestamp)
        </div>
        <div>
            @Html.EditorFor(model => transaction.Timestamp)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => transaction.TotalPrice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => transaction.TotalPrice)
            @Html.ValidationMessageFor(model => transaction.TotalPrice)
        </div>
@*        <div>
            @Html.EditorFor(model => Model.Store.Id)
            @Html.ValidationMessageFor(model => model.Store.Id)
        </div>*@

        <div>
            @Html.DropDownList("StoreId", String.Empty)
        </div>

        <div>
            @*@Html.Partial("_EditTransactionItems", transaction)*@
            <table>
            @Html.EditorFor(x => x.Transaction.TransactionItems);
                @*@Html.EditorFor(x => x.TransactionItem);*@
            </table>
            
        </div>
        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
