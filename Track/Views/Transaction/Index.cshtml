@*@model IEnumerable<Track.Models.Transaction>*@


@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<table data-bind="foreach: transactions">
    <thead>
        <tr>
            <th></th>
            <th>Date</th>
            <th>Price</th>
            <th>Store</th>
        </tr>
    </thead>
    <tbody>
        
        <tr>
            <td><a href="#" data-bind="click: $root.toggleDetails, text: showHideLink"></a></td>
            <td data-bind="event: { mouseover: function () { $data.isSelected(true) }, mouseout: function () { $data.isSelected(false) } }"><span data-bind="    text: Timestamp"></span></td>
            <td><span data-bind="text: $data.TotalPrice"></span></td>
            <td><span data-bind="text: Store.Name"></span></td>
            @*<td><a href="#" data-bind="click: $root.toggleDetails, event: { mouseover: function () { $data.isSelected(true) }, mouseout: function () { $data.isSelected(false) } }">Details</a></td>*@
            @*<td><a href="#" data-bind="click: $root.toggleDetails">Details</a></td>*@
            <td><a href="#" data-bind="click: $root.removeTransaction">Remove</a></td>

        </tr>
        <!-- ko if:  isSelected --> 
            
            @*<!--  foreach: TransactionItems -->*@
            <!-- ko template: { name: displayMode, foreach: TransactionItems } --> <!-- /ko -->
                @*<tr>
                    <td></td>
                    <td data-bind="text: Item"></td>
                    <td data-bind="text: Price"></td>
                    <td><a href="#" data-bind="click: $root.removeItem.bind($root, $parent, $data)">Remove</a></td>
                </tr>*@
            
            @*<!--  -->*@
            <tr>
                <td><a href="#" data-bind="click: $root.addItem">Add Item</a></td>

            </tr>
        <!-- /ko -->
    </tbody>
</table>

<script type="text/html" id="editItems">
    <tr>
        <td><input data-bind="value: Item" /></td>
        <td><input data-bind="value: Price" /></td>
        <td><a href="#" data-bind="click: $root.removeItem.bind($root, $parent, $data)">Remove</a></td>
    </tr>
</script>

<script type="text/html" id="listItems">
    <tr>
        <td></td>
        @*<td data-bind="visible: true, text: Item, click: editItem"></td>*@
        <td data-bind="visible: !editable(), text: Item, click: editItem"></td>
        <td><input data-bind="visible: editable, value: Item, hasfocus: editable" /></td>
        <td data-bind="text: Price"></td>
        <td><a href="#" data-bind="click: $root.removeItem.bind($root, $parent, $data)">Remove</a></td>
    </tr>
</script>

@*<div data-bind="text: ko.mapping.toJSON(transactions)"></div>*@

<script type="text/javascript">

    @*Create mapping on transaction view model to add the iSelected property*@
    var mappingOptions =
        {
            create: function (options) {
                return new Transaction(options.data);
            }
        }

    function TransactionItem(data) {
        this.editable = ko.observable(false);

        this.editItem = function () {
            this.editable(true);
        }

        ko.mapping.fromJS(data, {}, this);
    }

    function Transaction(data) {
        this.isSelected = ko.observable(false);
        this.showHideLink = ko.computed(function () {
            return this.isSelected() ? "Hide" : "Show";
        }, this);

        this.displayMode = function () { return "listItems" };

        var mappingOptions = {
            'TransactionItems': {
                create: function (options) {
                    return new TransactionItem(options.data);
                }
            }
        }

        ko.mapping.fromJS(data, mappingOptions, this);
    }

    var viewModel = {};
    self = viewModel;

    self.isChecked =  ko.observable(true);
        
        @* Grab transaction data from the server *@
        $.getJSON("/Transaction/LoadTransactions", function (data) {
            //alert(data);
            viewModel.transactions = ko.mapping.fromJSON(data, mappingOptions);

            viewModel.removeItem = function (transaction, item) {
                
                transaction.TransactionItems.remove(item);
                return false;
            }
            viewModel.addItem = function (transaction) {

                transaction.TransactionItems.push({ "Item" : "", "Price" : "1.00"});
                return false;
            }

            ko.applyBindings(viewModel);
        });

        viewModel.removeTransaction = function (data) { self.transactions.remove(data) }

        viewModel.toggleDetails = function (data) {
            data.isSelected((data.isSelected() ? false : true));
        }

        viewModel.editItem = function (item) {
            item.editable = ko.observable(true);
        }
</script>


@*<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Store.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TotalPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Timestamp)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Store.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TotalPrice)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Timestamp)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.TransactionId }) |
            @Html.ActionLink("Details", "Details", new { id=item.TransactionId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.TransactionId })
        </td>
    </tr>
}

</table>*@
